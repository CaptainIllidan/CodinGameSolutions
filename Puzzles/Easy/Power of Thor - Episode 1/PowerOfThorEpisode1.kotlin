import java.util.*
import java.io.*
import java.math.*

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 * ---
 * Hint: You can use the debug stream to print initialTX and initialTY, if Thor seems not follow your orders.
 **/
fun main(args : Array<String>) {
    val input = Scanner(System.`in`)
    val lightX = input.nextInt() // the X position of the light of power
    val lightY = input.nextInt() // the Y position of the light of power
    var initialTx = input.nextInt() // Thor's starting X position
    var initialTy = input.nextInt() // Thor's starting Y position

    // game loop
    while (true) {
        val remainingTurns = input.nextInt() // The remaining amount of turns Thor can move. Do not remove this line.

        val answer = StringBuilder();

        if (lightY > initialTy) {
            answer.append("S")
            initialTy++
        } else if (lightY < initialTy) {
            answer.append("N")
            initialTy--
        }

        if (lightX < initialTx) {
            answer.append("W")
            initialTx--
        } else if (lightX > initialTx) {
            answer.append("E")
            initialTx++
        }


        // A single line providing the move to be made: N NE E SE S SW W or NW
        println(answer)
    }
}